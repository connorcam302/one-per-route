import {
  SignIn,
  SignInButton,
  SignOutButton,
  useUser,
} from "@clerk/clerk-react";
import Head from "next/head";
import Link from "next/link";
import { RouterOutputs, api } from "~/utils/api";
import relativeTim from "dayjs/plugin/relativeTime";

export default function Home() {
  const user = useUser();

  const { data, isLoading } = api.runs.getAll.useQuery();

  const CreateRunWizard = () => {
    const { user } = useUser();
    if (!user) return null;

    return (
      <div className="flex">
        <img
          src={user.profileImageUrl}
          alt="Profile Image"
          className="h-16 w-16 rounded-full"
        />
      </div>
    );
  };

  type RunWithUser = RouterOutputs["runs"]["getAll"][number];
  const RunView = (props: RunWithUser) => {
    const { run, user } = props;
    console.log(user);
    return (
      <div key={run.id} className=" flex border-b border-slate-400 p-4">
        <img
          src={user?.profileImageUrl}
          alt="Profile Image"
          className="h-16 w-16"
        />
        <div className="flex flex-col">
          <div className="flex">
            <span>{user?.username}</span>
          </div>
          <span>
            {run.gameId} &nbsp;
            {JSON.stringify(run.encounters)}
          </span>
        </div>
      </div>
    );
  };

  console.log(user);

  if (isLoading) return <div>Loading...</div>;
  if (!data) return <div>Something went wrong.</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-200 bg-red-800 md:max-w-2xl">
          <div className="flex border-b border-slate-200 p-4">
            {!user.isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}
            {user.isSignedIn && (
              <div className="flex w-full justify-between">
                <CreateRunWizard />
                <SignOutButton />
              </div>
            )}
          </div>
          <div className="flex flex-col">
            {data?.map((FullRun) => (
              <RunView {...FullRun} key={FullRun.run.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
